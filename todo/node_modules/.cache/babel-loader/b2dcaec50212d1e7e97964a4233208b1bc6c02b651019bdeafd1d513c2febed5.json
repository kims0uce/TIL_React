{"ast":null,"code":"var _jsxFileName = \"/Users/kimsoyeon/TIL/React/todo/src/components/List.js\";\n// extension : ES7+ : rfc 치면 와꾸 만들어준다.\n// 컴포넌트를 나눌 때는 정답이 없다. 재사용성이 높도록 나눠준다.\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List(_ref) {\n  let {\n    todoData,\n    setTodoData\n  } = _ref;\n  // this.filter() 메소드를 사용하여 할일 목록을 지운다.\n  const handleClick = id => {\n    let newTodoData = todoData.filter(data => data.id !== id);\n    console.log(\"newTodoData\", newTodoData);\n    setTodoData(newTodoData);\n  };\n\n  // 완료한 할 일 가로선 긋기\n  const handelCompleteChange = id => {\n    let newTodoData = todoData.map(data => {\n      if (data.id === id) {\n        data.completed = !data.completed;\n      }\n      return data;\n    });\n\n    // this.setState({todoData: newTodoData});\n    setTodoData(newTodoData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: todoData.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between w-full px-4 py-1 my-2 text-\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          defaultChecked: false,\n          onChange: () => handelCompleteChange(data.key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), data.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleClick(data.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, data.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","List","_ref","todoData","setTodoData","handleClick","id","newTodoData","filter","data","console","log","handelCompleteChange","map","completed","children","className","type","defaultChecked","onChange","key","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","_c","$RefreshReg$"],"sources":["/Users/kimsoyeon/TIL/React/todo/src/components/List.js"],"sourcesContent":["// extension : ES7+ : rfc 치면 와꾸 만들어준다.\n// 컴포넌트를 나눌 때는 정답이 없다. 재사용성이 높도록 나눠준다.\nimport React from \"react\";\n\nexport default function List({ todoData, setTodoData }) {\n  // this.filter() 메소드를 사용하여 할일 목록을 지운다.\n  const handleClick = (id) => {\n    let newTodoData = todoData.filter((data) => data.id !== id);\n    console.log(\"newTodoData\", newTodoData);\n    setTodoData(newTodoData);\n  };\n\n  // 완료한 할 일 가로선 긋기\n  const handelCompleteChange = (id) => {\n    let newTodoData = todoData.map((data) => {\n      if (data.id === id) {\n        data.completed = !data.completed;\n      }\n      return data;\n    });\n\n    // this.setState({todoData: newTodoData});\n    setTodoData(newTodoData);\n  };\n\n  return (\n    <div>\n      {todoData.map((data) => (\n        <div key={data.id}>\n          <div className=\"flex items-center justify-between w-full px-4 py-1 my-2 text-\">\n            <input\n              type=\"checkbox\"\n              defaultChecked={false}\n              onChange={() => handelCompleteChange(data.key)}\n            />\n            {data.title}\n            <button onClick={() => handleClick(data.id)}>X</button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,IAAIA,CAAAC,IAAA,EAA4B;EAAA,IAA3B;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAAF,IAAA;EACpD;EACA,MAAMG,WAAW,GAAIC,EAAE,IAAK;IAC1B,IAAIC,WAAW,GAAGJ,QAAQ,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;IAC3DI,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,WAAW,CAAC;IACvCH,WAAW,CAACG,WAAW,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMK,oBAAoB,GAAIN,EAAE,IAAK;IACnC,IAAIC,WAAW,GAAGJ,QAAQ,CAACU,GAAG,CAAEJ,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACH,EAAE,KAAKA,EAAE,EAAE;QAClBG,IAAI,CAACK,SAAS,GAAG,CAACL,IAAI,CAACK,SAAS;MAClC;MACA,OAAOL,IAAI;IACb,CAAC,CAAC;;IAEF;IACAL,WAAW,CAACG,WAAW,CAAC;EAC1B,CAAC;EAED,oBACEP,OAAA;IAAAe,QAAA,EACGZ,QAAQ,CAACU,GAAG,CAAEJ,IAAI,iBACjBT,OAAA;MAAAe,QAAA,eACEf,OAAA;QAAKgB,SAAS,EAAC,+DAA+D;QAAAD,QAAA,gBAC5Ef,OAAA;UACEiB,IAAI,EAAC,UAAU;UACfC,cAAc,EAAE,KAAM;UACtBC,QAAQ,EAAEA,CAAA,KAAMP,oBAAoB,CAACH,IAAI,CAACW,GAAG;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC/C,EACDf,IAAI,CAACgB,KAAK,eACXzB,OAAA;UAAQ0B,OAAO,EAAEA,CAAA,KAAMrB,WAAW,CAACI,IAAI,CAACH,EAAE,CAAE;UAAAS,QAAA,EAAC;QAAC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACnD,GATEf,IAAI,CAACH,EAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAWlB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACG,EAAA,GAtCuB1B,IAAI;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}