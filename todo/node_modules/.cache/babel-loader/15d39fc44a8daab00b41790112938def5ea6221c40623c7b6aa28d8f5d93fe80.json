{"ast":null,"code":"var _jsxFileName = \"/Users/kimsoyeon/TIL/React/todo/src/components/List.js\";\n// extension : ES7+ : rfc 치면 와꾸 만들어준다.\n// 컴포넌트를 나눌 때는 정답이 없다. 재사용성이 높도록 나눠준다.\nimport React from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function List(_ref) {\n  let {\n    todoData,\n    setTodoData\n  } = _ref;\n  // this.filter() 메소드를 사용하여 할일 목록을 지운다.\n  const handleClick = id => {\n    let newTodoData = todoData.filter(data => data.id !== id);\n    console.log(\"newTodoData\", newTodoData);\n    setTodoData(newTodoData);\n  };\n\n  // 완료한 할 일 가로선 긋기\n  const handelCompleteChange = id => {\n    let newTodoData = todoData.map(data => {\n      if (data.id === id) {\n        data.completed = !data.completed;\n      }\n      return data;\n    });\n\n    // this.setState({todoData: newTodoData});\n    setTodoData(newTodoData);\n  };\n  const handleEnd = result => {\n    // 목적지가 없으면 그대로 리턴한다.\n    if (!result.destination) return;\n\n    // 목적지가 있다면 순서를 변경하고 화면에 출력한다.\n    const newTodoData = todoData;\n\n    // splice() : 배열의 기존 요소를 삭제 또는 교체하거나 새 요소를 추가하여 배열의 내용을 변경한다.\n    // 1. 변경되는 아이템을 배열에서 지운다.\n    // 2.\n    const [reorderedItem] = newTodoData.splice();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"todo\",\n        children: provided =>\n        /*#__PURE__*/\n        // Droppable에서 div로 정보를 전달한다\n        _jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [todoData.map((data, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: data.id.toString(),\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ...provided.draggableProps,\n              ref: provided.innerRef,\n              ...provided.dragHandleProps,\n              className: `${snapshot.isDragging ? \"bg-gray-400\" : \"bg-gray-100\"} flex items-center justify-between w-full px-4 py-1 my-2 text-gray-600 border rounded`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  defaultChecked: data.completed,\n                  onChange: () => handelCompleteChange(data.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: data.completed ? \"line-through\" : undefined,\n                  children: data.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"px-4 py-2 float-right\",\n                  onClick: () => handleClick(data.id),\n                  children: \"X\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 23\n              }, this)]\n            }, data.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_c = List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","DragDropContext","Draggable","Droppable","jsxDEV","_jsxDEV","List","_ref","todoData","setTodoData","handleClick","id","newTodoData","filter","data","console","log","handelCompleteChange","map","completed","handleEnd","result","destination","reorderedItem","splice","children","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","index","draggableId","toString","snapshot","draggableProps","dragHandleProps","className","isDragging","type","defaultChecked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","undefined","title","onClick","placeholder","_c","$RefreshReg$"],"sources":["/Users/kimsoyeon/TIL/React/todo/src/components/List.js"],"sourcesContent":["// extension : ES7+ : rfc 치면 와꾸 만들어준다.\n// 컴포넌트를 나눌 때는 정답이 없다. 재사용성이 높도록 나눠준다.\nimport React from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\n\nexport default function List({ todoData, setTodoData }) {\n  // this.filter() 메소드를 사용하여 할일 목록을 지운다.\n  const handleClick = (id) => {\n    let newTodoData = todoData.filter((data) => data.id !== id);\n    console.log(\"newTodoData\", newTodoData);\n    setTodoData(newTodoData);\n  };\n\n  // 완료한 할 일 가로선 긋기\n  const handelCompleteChange = (id) => {\n    let newTodoData = todoData.map((data) => {\n      if (data.id === id) {\n        data.completed = !data.completed;\n      }\n      return data;\n    });\n\n    // this.setState({todoData: newTodoData});\n    setTodoData(newTodoData);\n  };\n\n  const handleEnd = (result) => {\n    // 목적지가 없으면 그대로 리턴한다.\n    if (!result.destination) return;\n\n    // 목적지가 있다면 순서를 변경하고 화면에 출력한다.\n    const newTodoData = todoData;\n\n    // splice() : 배열의 기존 요소를 삭제 또는 교체하거나 새 요소를 추가하여 배열의 내용을 변경한다.\n    // 1. 변경되는 아이템을 배열에서 지운다.\n    // 2.\n    const [reorderedItem] = newTodoData.splice();\n  };\n\n  return (\n    <div>\n      <DragDropContext onDragEnd={handleEnd}>\n        <Droppable droppableId=\"todo\">\n          {(provided) => (\n            // Droppable에서 div로 정보를 전달한다\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              {todoData.map((data, index) => (\n                <Draggable\n                  key={data.id}\n                  draggableId={data.id.toString()}\n                  index={index}\n                >\n                  {(provided, snapshot) => (\n                    <div\n                      key={data.id}\n                      {...provided.draggableProps}\n                      ref={provided.innerRef}\n                      {...provided.dragHandleProps}\n                      className={`${\n                        snapshot.isDragging ? \"bg-gray-400\" : \"bg-gray-100\"\n                      } flex items-center justify-between w-full px-4 py-1 my-2 text-gray-600 border rounded`}\n                    >\n                      <div className=\"item-center\">\n                        <input\n                          type=\"checkbox\"\n                          defaultChecked={data.completed}\n                          onChange={() => handelCompleteChange(data.id)}\n                        />{\" \"}\n                        <span\n                          className={\n                            data.completed ? \"line-through\" : undefined\n                          }\n                        >\n                          {data.title}\n                        </span>\n                      </div>\n                      <div className=\"item-center\">\n                        <button\n                          className=\"px-4 py-2 float-right\"\n                          onClick={() => handleClick(data.id)}\n                        >\n                          X\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n}\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,eAAe,SAASC,IAAIA,CAAAC,IAAA,EAA4B;EAAA,IAA3B;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAAF,IAAA;EACpD;EACA,MAAMG,WAAW,GAAIC,EAAE,IAAK;IAC1B,IAAIC,WAAW,GAAGJ,QAAQ,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC;IAC3DI,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,WAAW,CAAC;IACvCH,WAAW,CAACG,WAAW,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMK,oBAAoB,GAAIN,EAAE,IAAK;IACnC,IAAIC,WAAW,GAAGJ,QAAQ,CAACU,GAAG,CAAEJ,IAAI,IAAK;MACvC,IAAIA,IAAI,CAACH,EAAE,KAAKA,EAAE,EAAE;QAClBG,IAAI,CAACK,SAAS,GAAG,CAACL,IAAI,CAACK,SAAS;MAClC;MACA,OAAOL,IAAI;IACb,CAAC,CAAC;;IAEF;IACAL,WAAW,CAACG,WAAW,CAAC;EAC1B,CAAC;EAED,MAAMQ,SAAS,GAAIC,MAAM,IAAK;IAC5B;IACA,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;;IAEzB;IACA,MAAMV,WAAW,GAAGJ,QAAQ;;IAE5B;IACA;IACA;IACA,MAAM,CAACe,aAAa,CAAC,GAAGX,WAAW,CAACY,MAAM,EAAE;EAC9C,CAAC;EAED,oBACEnB,OAAA;IAAAoB,QAAA,eACEpB,OAAA,CAACJ,eAAe;MAACyB,SAAS,EAAEN,SAAU;MAAAK,QAAA,eACpCpB,OAAA,CAACF,SAAS;QAACwB,WAAW,EAAC,MAAM;QAAAF,QAAA,EACzBG,QAAQ;QAAA;QACR;QACAvB,OAAA;UAAA,GAASuB,QAAQ,CAACC,cAAc;UAAEC,GAAG,EAAEF,QAAQ,CAACG,QAAS;UAAAN,QAAA,GACtDjB,QAAQ,CAACU,GAAG,CAAC,CAACJ,IAAI,EAAEkB,KAAK,kBACxB3B,OAAA,CAACH,SAAS;YAER+B,WAAW,EAAEnB,IAAI,CAACH,EAAE,CAACuB,QAAQ,EAAG;YAChCF,KAAK,EAAEA,KAAM;YAAAP,QAAA,EAEZA,CAACG,QAAQ,EAAEO,QAAQ,kBAClB9B,OAAA;cAAA,GAEMuB,QAAQ,CAACQ,cAAc;cAC3BN,GAAG,EAAEF,QAAQ,CAACG,QAAS;cAAA,GACnBH,QAAQ,CAACS,eAAe;cAC5BC,SAAS,EAAG,GACVH,QAAQ,CAACI,UAAU,GAAG,aAAa,GAAG,aACvC,uFAAuF;cAAAd,QAAA,gBAExFpB,OAAA;gBAAKiC,SAAS,EAAC,aAAa;gBAAAb,QAAA,gBAC1BpB,OAAA;kBACEmC,IAAI,EAAC,UAAU;kBACfC,cAAc,EAAE3B,IAAI,CAACK,SAAU;kBAC/BuB,QAAQ,EAAEA,CAAA,KAAMzB,oBAAoB,CAACH,IAAI,CAACH,EAAE;gBAAE;kBAAAgC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAC9C,EAAC,GAAG,eACNzC,OAAA;kBACEiC,SAAS,EACPxB,IAAI,CAACK,SAAS,GAAG,cAAc,GAAG4B,SACnC;kBAAAtB,QAAA,EAEAX,IAAI,CAACkC;gBAAK;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACN;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACH,eACNzC,OAAA;gBAAKiC,SAAS,EAAC,aAAa;gBAAAb,QAAA,eAC1BpB,OAAA;kBACEiC,SAAS,EAAC,uBAAuB;kBACjCW,OAAO,EAAEA,CAAA,KAAMvC,WAAW,CAACI,IAAI,CAACH,EAAE,CAAE;kBAAAc,QAAA,EACrC;gBAED;kBAAAkB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA;cAAS;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACL;YAAA,GA7BDhC,IAAI,CAACH,EAAE;cAAAgC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UA+Bf,GArCIhC,IAAI,CAACH,EAAE;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAuCf,CAAC,EACDlB,QAAQ,CAACsB,WAAW;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAExB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACI;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACd;AAEV;AAACK,EAAA,GA1FuB7C,IAAI;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}